#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    macros {
        macro_auto_sqbracket: macro_auto_sqbracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT>;
            label = "MACRO_AUTO_SQBRACKET";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp ESC     &kp N1        &kp N2          &kp N3     &kp N4     &kp N5    &kp UP_ARROW     &kp N6     &kp N7     &kp N8     &kp N9   &kp N0      &kp BACKSPACE
&kp TAB     &kp Q         &kp W           &kp E      &kp R      &kp T     &kp DOWN_ARROW   &kp Y      &kp U      &kp I      &kp O    &kp P       &kp BSLH
&kp LALT    &kp A         &kp S           &kp D      &kp F      &kp G     &kp LEFT_ARROW   &kp H      &kp J      &kp K      &kp L    &kp SEMI    &kp APOS
&kp LSHIFT  &kp Z         &kp X           &kp C      &kp V      &kp B     &kp RIGHT_ARROW  &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH    &kp MINUS
&kp C_MUTE  &kp LEFT_WIN  &kp LEFT_SHIFT  &kp LCTRL  &kp SPACE  &mo 1     &kp ENTER        &kp ENTER  &kp SPACE  &mo 2      &tog 3   &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp LA(TAB) LS(LA(TAB))>;
            display-name = "default";
        };

        layer_1 {
            bindings = <
&kp GRAVE     &kp F1           &kp F2           &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8        &kp F9     &kp F10           &kp TILDE
&kp CAPS      &kp GRAVE        &mkp LCLK        &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp HOME         &kp END       &kp PG_DN  &kp MINUS         &kp EQUAL
&trans        &kp TILDE        &trans           &msc SCRL_UP     &trans           &mkp MB5           &mmv MOVE_LEFT   &kp LEFT_ARROW   &kp DOWN         &kp UP_ARROW  &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp LEFT_WIN  &rgb_ug RGB_OFF  &msc SCRL_LEFT   &msc SCRL_DOWN   &msc SCRL_RIGHT  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT    &kp F11    &kp F12           &trans
&kp C_MUTE    &rgb_ug RGB_ON   &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &trans           &trans             &mkp LCLK        &trans           &trans           &trans        &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = " gaming";
            bindings = <
&kp ESC     &kp N1        &kp N2          &kp N3     &kp N4     &kp N5    &kp UP_ARROW     &kp N6     &kp N7     &kp N8        &kp N9     &kp N0      &kp BACKSPACE
&kp TAB     &kp Q         &kp W           &kp E      &kp R      &kp T     &kp DOWN_ARROW   &kp Y      &kp U      &kp UP_ARROW  &kp O      &kp P       &kp BSLH
&kp LALT    &kp A         &kp S           &kp D      &kp F      &kp G     &kp LEFT_ARROW   &kp H      &kp LEFT   &kp DOWN      &kp RIGHT  &kp SEMI    &kp APOS
&kp LSHIFT  &kp Z         &kp X           &kp C      &kp V      &kp B     &kp RIGHT_ARROW  &kp N      &kp M      &kp COMMA     &kp DOT    &kp FSLH    &kp MINUS
&kp C_MUTE  &kp LEFT_WIN  &kp LEFT_SHIFT  &kp LCTRL  &kp SPACE  &mo 1     &kp ENTER        &kp ENTER  &kp SPACE  &mo 2         &tog 3     &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };
    };
};
